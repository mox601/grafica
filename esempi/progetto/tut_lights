tutorial sulle luci


quando si abilitano le luci con 
glEnable(GL_LIGHTING)
dobbiamo specificare molte cose sulla superficie, come riflette
la luce, come la emette, etc etc... concetto di materiale


la luce riflessa dalla superficie verso il tuo occhio, 
lo raggiunge in 4 modi diversi: 

AMBIENT
luce uniforme che arriva da tutte le parti ugualmente, 
è una luce che arriva dal cielo e potrebbe essere considerata uniforme

DIFFUSE
luce che arriva da un punto particolare (il sole) e che cambia intesità se 
la faccia su cui si riflette è rivolta verso la sorgente o no. 
una volta che la luce colpisce il corpo, viene riflessa equamente verso 
tutte le direzioni. definisce nel miglior modo la forma degli oggetti 3d. 

SPECULAR
come la DIFFUSE, la luce viene da un punto particolare, ma viene riflessa
maggiormente in una direzione singola, definita dalla superficie dell'oggetto 
colpito. crea la differenza tra materiali come plastica, metalli e superfici
grezze. 

EMISSION
la luce è emessa dal poligono, in tutte le direzioni. 



So, there are three light colours for each light - 
Ambient, Diffuse and Specular (set with glLight) 
and four for each surface (set with glMaterial).


The final polygon colour is the sum of all four light components, 
each of which is formed by multiplying the glMaterial colour by 
the glLight colour (modified by the directionality in the case of 
Diffuse and Specular). Since there is no Emission colour for the glLight, 
that is added to the final colour without modification.

A good set of settings for a light source would be to set the 
Diffuse and Specular components to the colour of the light source, 
and the Ambient to the same colour - but at MUCH reduced intensity, 
10% to 40% seems reasonable in most cases. 

For the glMaterial, it's usual to set the Ambient and Diffuse 
colours to the natural colour of the object and to put the Specular 
colour to white. The emission colour is generally black for objects 
that do not shine by their own light.






parametri glLight: 
The ten light	parameters are as follows:

	  GL_AMBIENT	      params contains four integer or
			      floating-point values that specify the
			      ambient RGBA intensity of	the light.
			      Integer values are mapped	linearly such
			      that the most positive representable
			      value maps to 1.0, and the most negative
			      representable value maps to -1.0.
			      Floating-point values are	mapped
			      directly.	 Neither integer nor
			      floating-point values are	clamped.  The
			      initial ambient light intensity is (0,
			      0, 0, 1).

	  GL_DIFFUSE	      params contains four integer or
			      floating-point values that specify the
			      diffuse RGBA intensity of	the light.
			      Integer values are mapped	linearly such
			      that the most positive representable
			      value maps to 1.0, and the most negative
			      representable value maps to -1.0.
			      Floating-point values are	mapped
			      directly.	 Neither integer nor
			      floating-point values are	clamped.  The
			      initial value for	GL_LIGHT0 is (1, 1, 1,
			      1); for other lights, the	initial	value
			      is (0, 0,	0, 0).

	  GL_SPECULAR	      params contains four integer or
			      floating-point values that specify the
			      specular RGBA intensity of the light.
			      Integer values are mapped	linearly such
			      that the most positive representable
			      value maps to 1.0, and the most negative
			      representable value maps to -1.0.
			      Floating-point values are	mapped
			      directly.	 Neither integer nor
			      floating-point values are	clamped.  The
			      initial value for	GL_LIGHT0 is (1, 1, 1,
			      1); for other lights, the	initial	value
			      is (0, 0,	0, 0).

	  GL_POSITION	      params contains four integer or
			      floating-point values that specify the
			      position of the light in homogeneous
			      object coordinates.  Both	integer	and
			      floating-point values are	mapped
			      directly.	 Neither integer nor
			      floating-point values are	clamped.

			      The position is transformed by the
			      modelview	matrix when glLight is called
			      (just as if it were a point), and	it is
			      stored in	eye coordinates.  If the w
			      component	of the position	is 0, the
			      light is treated as a directional
			      source.  Diffuse and specular lighting
			      calculations take	the light's direction,
			      but not its actual position, into
			      account, and attenuation is disabled.
			      Otherwise, diffuse and specular lighting
			      calculations are based on	the actual
			      location of the light in eye
			      coordinates, and attenuation is enabled.
			      The initial position is (0, 0, 1,	0);
			      thus, the	initial	light source is
			      directional, parallel to,	and in the
			      direction	of the -z axis.

	  GL_SPOT_DIRECTION   params contains three integer or
			      floating-point values that specify the
			      direction	of the light in	homogeneous
			      object coordinates.  Both	integer	and
			      floating-point values are	mapped
			      directly.	 Neither integer nor
			      floating-point values are	clamped.

			      The spot direction is transformed	by the
			      inverse of the modelview matrix when
			      glLight is called	(just as if it were a
			      normal), and it is stored	in eye
			      coordinates.  It is significant only
			      when GL_SPOT_CUTOFF is not 180, which it
			      is initially.  The initial direction is
			      (0, 0, -1).

	  GL_SPOT_EXPONENT    params is	a single integer or floating-
			      point value that specifies the intensity
			      distribution of the light.  Integer and
			      floating-point values are	mapped
			      directly.	 Only values in	the range
			      [0,128] are accepted.

			      Effective	light intensity	is attenuated
			      by the cosine of the angle between the
			      direction	of the light and the direction
			      from the light to	the vertex being
			      lighted, raised to the power of the spot
			      exponent.	 Thus, higher spot exponents
			      result in	a more focused light source,
			      regardless of the	spot cutoff angle (see
			      GL_SPOT_CUTOFF, next paragraph).	The
			      initial spot exponent is 0, resulting in
			      uniform light distribution.

	  GL_SPOT_CUTOFF      params is	a single integer or floating-
			      point value that specifies the maximum
			      spread angle of a	light source.  Integer
			      and floating-point values	are mapped
			      directly.	 Only values in	the range
			      [0,90] and the special value 180 are
			      accepted.	 If the	angle between the
			      direction	of the light and the direction
			      from the light to	the vertex being
			      lighted is greater than the spot cutoff
			      angle, the light is completely masked.
			      Otherwise, its intensity is controlled
			      by the spot exponent and the attenuation
			      factors.	The initial spot cutoff	is
			      180, resulting in	uniform	light
			      distribution.

	  GL_CONSTANT_ATTENUATION

	  GL_LINEAR_ATTENUATION

	  GL_QUADRATIC_ATTENUATION
			      params is	a single integer or floating-
			      point value that specifies one of	the
			      three light attenuation factors.
			      Integer and floating-point values	are
			      mapped directly.	Only nonnegative
			      values are accepted.  If the light is
			      positional, rather than directional, its
			      intensity	is attenuated by the
			      reciprocal of the	sum of the constant
			      factor, the linear factor	times the
			      distance between the light and the
			      vertex being lighted, and	the quadratic
			      factor times the square of the same
			      distance.	 The initial attenuation
			      factors are (1, 0, 0), resulting in no
			      attenuation.



